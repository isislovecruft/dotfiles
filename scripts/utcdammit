#!/bin/bash
###############################################################################
#
# UTCdammit 
# ---------
# Set the system timezone with tzselect to UTC, then select a different
# timezone in this script, and call it to convert to the selected timezone, in
# order to display the time and date correctly in shells.
#
# @author Isis Agora Lovecruft, 0x2cdb8b35
# @date 25 July 2012
# @version 0.0.1
#______________________________________________________________________________
# Changelog:
###############################################################################

## If you wish to set $LOCALTZ in this script, then set it here:
_LOCALTZ_="America/Los_Angeles"

function usage
{
    echo "Usage: $0 [options]"; echo;
    echo "In order for this script to work least painfully, you should set an"
    echo "environment variable, \$LOCALTZ, in your .profile or .bashrc, like so:"
    echo "    LOCALTZ=\"America/Los_Angeles\""
    echo "    export LOCALTZ"; echo;
    echo "Options:"
    echo "-l, --localtz           Set the local timezone"
    echo "-t, --time              Display the local time (24-hour)"
    echo "-w, --weekday           Display the local weekday (long)"
    echo "-d, --date              Display the local date (day/month)"
    echo "-a, --all               Display full local date"
    echo "-h, --help              Show this cruft"; echo;
    echo "Examples:"
    echo "    \$ utcdammit -l \"America/Los_Angeles\" -t"
    echo "     14:30 PDT"; echo;
    echo "    \$ utcdammit -a"
    echo "     14:30 PDT Wednesday 25/07"; echo;
    exit -1
}

function setup
{
    ## Source .bashrc and .profile:
    if [ -f "$HOME/.profile" ] ; then
        . $HOME/.profile
    else
        ## If no .profile, pretend we are one:
        if [ -n "$BASH_VERSION" ] ; then
            if [ -f "$HOME/.bashrc" ] ; then
                . $HOME/.bashrc
            fi
        fi
    fi

    if [ -n "$LOCALTZ" ] ; then
        LOCALTZ=$_LOCALTZ_
        export LOCALTZ
    fi
}

function fluxcapacitor
{
    if [ -n "$LOCALTZ" ] ; then
        echo "Error: No local tz!"; echo;
        exit 1
    else
        export LOCALTZ
    fi
}

function timewarp
{
    if [[ "$TZ" -eq "UTC" ]]; then
        LOCALTIMEDAMMIT=`TZ=$LOCALTZ date +%H:%M%_4Z`
        LOCALWEEKDAYDAMMIT=`TZ=$LOCALTZ date +%A`
        LOCALDATEDAMMIT=`TZ=$LOCALTZ date +%d/%m`
        LOCALTZDAMMIT="$LOCALTIMEDAMMIT $LOCALWEEKDAYDAMMIT $LOCALDATEDAMMIT"

        export LOCALTIMEDAMMIT
        export LOCALWEEKDAYDAMMIT
        export LOCALDATEDAMMIT
        export LOCALTZDAMMIT
    fi
}

function check
{
    if [[ "$LOCALTZDAMMIT" == "" ]]; then
        echo "There was a problem setting the local time zone..."; echo;
        exit 1
    fi
}


if [ "$#" == "0" ]; then
    usage
    exit -1
fi

setup
while [ "$1" != "" ]; do
    case $1 in
        -l | --localtz )      ## check number of args
                              #echo "Number of args: $#"
                              #ARE_WE_EVEN=$(expr $# / 2)
                              #echo "$ARE_WE_EVEN"
                              shift
                              LOCALTZ=$1
                              fluxcapacitor
                              ;;
        -t | --time )         timewarp
                              check
                              echo "$LOCALTIMEDAMMIT"
                              ;;
        -w | --weekday )      timewarp
                              check
                              echo "$LOCALWEEKDAYDAMMIT"
                              ;;
        -d | --date )         timewarp
                              check
                              echo "$LOCALDATEDAMMIT"
                              ;;
        -a | --all )          timewarp
                              check
                              echo "$LOCALTZDAMMIT"
                              ;;
        -h | --help )         usage
                              exit -1
                              ;;
        * )                   echo "Error: You gave me an argument I didn't understand..."
                              echo
                              usage
                              exit 1
                              ;;
    esac
    shift
done
